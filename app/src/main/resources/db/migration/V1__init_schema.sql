create table "courses_to_required_skills" (skill_level smallint check (skill_level between 0 and 2), id uuid not null, required_skills_id uuid, special_course_id uuid, primary key (id));
create table "courses_to_result_skills" (skill_level smallint check (skill_level between 0 and 2), id uuid not null, skill_id uuid, special_course_id uuid, primary key (id));
create table "educational_modules" (id uuid not null, name varchar(255), primary key (id));
create table "educational_program_to_courses_with_semesters" (is_required_course boolean, educational_program_id uuid, id uuid not null, semester_id uuid, special_course_id uuid, primary key (id));
create table "educational_programs" (id uuid not null, name varchar(255), semester_id_to_required_credits_count varchar(255), training_direction varchar(255), primary key (id));
create table "registration_tokens" (registration_token uuid not null, user_role varchar(255) check (user_role in ('STUDENT','UNIVERSITY_EMPLOYEE','ADMIN')), primary key (registration_token));
create table "selected_courses" (id uuid not null, semester_id uuid, special_course_id uuid, student_login uuid, primary key (id));
create table "semesters" (semester_number integer, year integer, id uuid not null, primary key (id));
create table "skills" (id uuid not null, name varchar(255), primary key (id));
create table "special_courses" (control smallint check (control between 0 and 1), credits_count integer, educational_module_id uuid, id uuid not null, department varchar(255), description varchar(255), name varchar(255), teacher_name varchar(255), primary key (id));
create table "student_skills" (level smallint check (level between 0 and 2), id uuid not null, skill_id uuid, student_login uuid, primary key (id));
create table "students" (educational_program_id uuid, login uuid not null, users_login uuid unique, "group" varchar(255), primary key (login));
create table "students_desired_skills" (level smallint check (level between 0 and 2), id uuid not null, skill_id uuid, student_login uuid, primary key (id));
create table "users" (role smallint check (role between 0 and 2), login uuid not null, password varchar(255), primary key (login));

alter table if exists "courses_to_required_skills" add constraint FK4on0h64leit5p2v7xwfjgjdkx foreign key (required_skills_id) references skills;
alter table if exists "courses_to_required_skills" add constraint FKm9hkdcah2h4sp5kpheexc6hcq foreign key (special_course_id) references special_courses;
alter table if exists "courses_to_result_skills" add constraint FKgcgg9jp646xs81vj8mvx6dfq8 foreign key (skill_id) references skills;
alter table if exists "courses_to_result_skills" add constraint FKdg9gdbpyigpmbvx1uc9kalet1 foreign key (special_course_id) references special_courses;
alter table if exists "educational_program_to_courses_with_semesters" add constraint FKdkvgdmd43lpiy9g6atm3vbvxe foreign key (educational_program_id) references educational_programs;
alter table if exists "educational_program_to_courses_with_semesters" add constraint FKmkt1e1i011r53qt9uhblf1u62 foreign key (semester_id) references semesters;
alter table if exists "educational_program_to_courses_with_semesters" add constraint FKep06drsagkulruhm9kfet8cj0 foreign key (special_course_id) references special_courses;
alter table if exists "selected_courses" add constraint FKhtj4ghf45rgx840q2icqs32ni foreign key (semester_id) references semesters;
alter table if exists "selected_courses" add constraint FKr6l78ydfvt3cwi2l3cy83oecw foreign key (special_course_id) references special_courses;
alter table if exists "selected_courses" add constraint FKqu90070dd087c2yjss62opdgk foreign key (student_login) references students;
alter table if exists "special_courses" add constraint FKgwa7317gg1sv8iwickctoqfei foreign key (educational_module_id) references educational_modules;
alter table if exists "student_skills" add constraint FKdyl6ffxg89qebmlpcg2x3fnbw foreign key (skill_id) references skills;
alter table if exists "student_skills" add constraint FKmqucxxm9thuhrtt35dqw0xqfh foreign key (student_login) references students;
alter table if exists "students" add constraint FKp65plgmefx811xau7o93nw12p foreign key (educational_program_id) references educational_programs;
alter table if exists "students" add constraint FKg8190g5p1ei8rmwk3wc923gte foreign key (users_login) references users;
alter table if exists "students_desired_skills" add constraint FK3xjcf2lolyw4b8qswa203cv0s foreign key (skill_id) references skills;
alter table if exists "students_desired_skills" add constraint FKj80csctnbk3brqogig6i7soid foreign key (student_login) references students;